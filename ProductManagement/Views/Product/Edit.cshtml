@model ProductManagement.Entity.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit","Product", FormMethod.Post, new { enctype ="multipart/form-data" }))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <h4>ProductViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="CategoryId" id="category" class="form-control" required></select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea class="form-control" name="Description">@Model.Description</textarea>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">            
            In Stock : <input type="radio" name="Status" value="true" checked="checked" /> <br>
            Out of Stock : <input type="radio" name="Status" value="false" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="file" class="form-control mb-3" /> <br>
            <img alt="@Model.ImageName" src="data:image/jpg;base64,@Convert.ToBase64String(Model.ImageData)" height="150px" width="280px" />

        </div>
    </div>

    @Html.HiddenFor(model => model.ImageContentType)
    @Html.HiddenFor(model => model.ImageData)
    @Html.HiddenFor(model => model.ImageName)
    @Html.HiddenFor(model => model.UserId)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
            var category = $('#category');
            $.ajax({
                type: 'GET',
                url: '/Product/GetAllCatrgory',
                dataType: 'json',
                success: function (data) {
                    $.each(data, function (index, val) {
                        category.append('<option value="' + val.id + '">'+val.Category+'</option>');
                    });
                },
                error: function () {
                    alert("No record!!!!!");
                }
            });
        });
</script>